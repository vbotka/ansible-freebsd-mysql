---
# /root/.mysql_secret will be created when mysql57-server starts for
# the first time. Let's store the secret in bsd_mysql_secret_local_file.

- name: "secret: Create {{ bsd_mysql_secret_local_dir }}"
  file:
    state: directory
    path: "{{ bsd_mysql_secret_local_dir }}"
  delegate_to: localhost

# Store the secret in bsd_mysql_secret_local_file
- name: "secret: Create {{ bsd_mysql_secret_file }}"
  block:
    - name: "secret: Read secret"
      command: tail -1 "{{ bsd_mysql_secret_file }}"
      register: bsd_mysql_secret
    - name: "secret: Set bsd_mysql_secret"
      set_fact:
        bsd_mysql_secret: "{{ bsd_mysql_secret.stdout }}"
    - name: "secret: Debug bsd_mysql_secret"
      debug:
        msg: "bsd_mysql_secret [{{ bsd_mysql_secret }}]"
      when: bsd_mysql_debug_classified|bool
    - name: "secret: Store bsd_mysql_secret in localhost {{ bsd_mysql_secret_local_file }}"
      template:
        src: mysql_secret.j2
        dest: "{{ bsd_mysql_secret_local_file }}"
        mode: "{{ bsd_mysql_secret_local_file_mode }}"
      delegate_to: localhost
  when:
    - bsd_mysql_secret_local_file is not exists
    - bsd_mysql_enable|bool
    - not ansible_check_mode

# Read the secret from bsd_mysql_secret_local_file
- name: "secret: Read {{ bsd_mysql_secret_file }}"
  block:
    - name: "secret: Read bsd_mysql_secret from localhost {{ bsd_mysql_secret_local_file }}"
      set_fact:
        bsd_mysql_secret: "{{ lookup('file', '{{ bsd_mysql_secret_local_file }}') }}"
    - name: "secret: Debug bsd_mysql_secret"
      debug:
        msg: "bsd_mysql_secret [ {{ bsd_mysql_secret }} ]"
      when: bsd_mysql_debug_classified|bool
  when: bsd_mysql_secret_local_file is exists

# EOF
...
