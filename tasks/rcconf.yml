---

- name: "rcconf: Enable and start MySQL."
  ansible.builtin.lineinfile:
    dest: /etc/rc.conf
    regexp: '^\s*mysql_enable\s*=(.*)$'
    line: 'mysql_enable="YES"'
    backup: "{{ bsd_mysql_conf_backup }}"
  notify: enable and start mysql
  when: bsd_mysql_enable|bool

- name: "rcconf: Disable and stop MySQL."
  ansible.builtin.lineinfile:
    dest: /etc/rc.conf
    regexp: '^\s*mysql_enable\s*=(.*)$'
    line: 'mysql_enable="NO"'
    backup: "{{ bsd_mysql_conf_backup }}"
  notify: disable and stop mysql
  when: not bsd_mysql_enable|bool

- name: "rcconf: Configure MySQL."
  ansible.builtin.lineinfile:
    dest: /etc/rc.conf
    regexp: '^\s*{{ item.key }}\s*=(.*)$'
    line: '{{ item.key }}="{{ item.val }}"'
    backup: "{{ bsd_mysql_conf_backup }}"
  loop: "{{ bsd_mysql_rcconf }}"
  notify: restart mysql

- name: Meta flush_handlers
  meta: flush_handlers

- name: "rcconf: Make sure service {{ bsd_mysql_service }} is started when enabled."
  block:
    - name: "rcconf: Start and enable MySQL service."
      ansible.builtin.service:
        name: "{{ bsd_mysql_service }}"
        state: started
        enabled: true
    - name: "rcconf: Wait for MySQL service at port {{ bsd_mysql_port }}."
      ansible.builtin.wait_for:
        port: "{{ bsd_mysql_port }}"
        timeout: "{{ bsd_mysql_port_wait_timeout }}"
  when: bsd_mysql_enable|bool

# EOF
...
